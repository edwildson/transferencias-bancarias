version: "3.7"

services:
  backend:
    container_name: backend
    build:
      context: .
    ports:
      - '8000:8000'
    volumes:
      - .:/app
    depends_on:
      - db_postgres
      - kafka
    networks:
      - backend_network
    tty: true
    stdin_open: true

  db_postgres:
    image: postgres:latest
    container_name: backend_postgres
    ports:
        - "5432:5432"
    networks:
      - backend_network
    environment:
        POSTGRES_USER: backend
        POSTGRES_PASSWORD: backend
        POSTGRES_DB: backend
    volumes:
      - $HOME/docker/volumes/backend_postgres:/var/lib/postgresql/data

  awslocalstack:
    image: localstack/localstack
    ports:
      - "4566:4566"
      - "4571:4571"
      - "8080:8080"
    environment:
      - SERVICES=s3
      - PORT_WEB_UI=8080
      - START_WEB=1
      - DEBUG=1
      - DEFAULT_REGION=eu-west-1
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./.docker/localstack/:/docker-entrypoint-initaws.d/"
    
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "123456"
    ports:
      - "1234:80"
    depends_on:
      - db_postgres
    networks:
      - backend_network
    
  kafka:
    image: wurstmeister/kafka:2.12-2.4.1
    container_name: kafka
    ports:
      - "9093:9092"  # Porta do Kafka
    networks:
      - backend_network
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://127.0.0.1:9093  # Porta externa alterada
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093  # Porta externa alterada
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181  # Conex√£o com o Zookeeper
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE  # Adicionando inter.broker.listener.name
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 10000
      KAFKA_CONNECTIONS_MAX_IDLE_MS: 600000
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_MAX_REQUEST_SIZE: 2000000
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    depends_on:
      - zookeeper
    restart: always
    tty: true
    stdin_open: true

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"  # Porta do Zookeeper
    networks:
      - backend_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_SYNC_LIMIT: 5
      ZOOKEEPER_MAX_CLIENT_CNXNS: 60

networks:
  backend_network:
    driver: bridge